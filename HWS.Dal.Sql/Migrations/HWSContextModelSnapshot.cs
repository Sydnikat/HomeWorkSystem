// <auto-generated />
using System;
using HWS.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HWS.Dal.Sql.Migrations
{
    [DbContext(typeof(HWSContext))]
    partial class HWSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HWS.Dal.Entities.Assignment", b =>
                {
                    b.Property<long>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HomeworkId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReservedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Student")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SubmissionDeadline")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TurnInDate")
                        .HasColumnType("datetime2");

                    b.HasKey("_id");

                    b.HasIndex("HomeworkId");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("HWS.Dal.Entities.Comment", b =>
                {
                    b.Property<long>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.ToTable("Comments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Comment");
                });

            modelBuilder.Entity("HWS.Dal.Entities.Group", b =>
                {
                    b.Property<long>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Owner_id")
                        .HasColumnType("bigint");

                    b.HasKey("_id");

                    b.HasIndex("Owner_id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("HWS.Dal.Entities.Homework", b =>
                {
                    b.Property<long>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplicationDeadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentNumberOfStudents")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxFileSize")
                        .HasColumnType("int");

                    b.Property<int>("MaximumNumberOfStudents")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDeadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_id");

                    b.HasIndex("GroupId");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("HWS.Dal.Entities.MongoUser", b =>
                {
                    b.Property<long>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.ToTable("MongoUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MongoUser");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.GroupStudentJoin", b =>
                {
                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("GroupId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupStudentJoin");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.GroupTeacherJoin", b =>
                {
                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("GroupId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("GroupTeacherJoin");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.HomeworkGranderJoin", b =>
                {
                    b.Property<long>("HomeworkId")
                        .HasColumnType("bigint");

                    b.Property<long>("GraderId")
                        .HasColumnType("bigint");

                    b.HasKey("HomeworkId", "GraderId");

                    b.HasIndex("GraderId");

                    b.ToTable("HomeworkGranderJoin");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.HomeworkStudentJoin", b =>
                {
                    b.Property<long>("HomeworkId")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("HomeworkId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeworkStudentJoin");
                });

            modelBuilder.Entity("HWS.Dal.Sql.Comments.DbEntities.GroupComment", b =>
                {
                    b.HasBaseType("HWS.Dal.Entities.Comment");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.HasIndex("GroupId");

                    b.HasDiscriminator().HasValue("GroupComment");
                });

            modelBuilder.Entity("HWS.Dal.Sql.Comments.DbEntities.HomeworkComment", b =>
                {
                    b.HasBaseType("HWS.Dal.Entities.Comment");

                    b.Property<long>("HomeworkId")
                        .HasColumnType("bigint");

                    b.HasIndex("HomeworkId");

                    b.HasDiscriminator().HasValue("HomeworkComment");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.DbEntities.GroupStudent", b =>
                {
                    b.HasBaseType("HWS.Dal.Entities.MongoUser");

                    b.HasDiscriminator().HasValue("GroupStudent");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.DbEntities.GroupTeacher", b =>
                {
                    b.HasBaseType("HWS.Dal.Entities.MongoUser");

                    b.HasDiscriminator().HasValue("GroupTeacher");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.DbEntities.HomeworkGrader", b =>
                {
                    b.HasBaseType("HWS.Dal.Entities.MongoUser");

                    b.HasDiscriminator().HasValue("HomeworkGrader");
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.DbEntities.HomeworkStudent", b =>
                {
                    b.HasBaseType("HWS.Dal.Entities.MongoUser");

                    b.HasDiscriminator().HasValue("HomeworkStudent");
                });

            modelBuilder.Entity("HWS.Dal.Entities.Assignment", b =>
                {
                    b.HasOne("HWS.Dal.Entities.Homework", "Homework")
                        .WithMany("Assignments")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HWS.Dal.Entities.Group", b =>
                {
                    b.HasOne("HWS.Dal.Entities.MongoUser", "Owner")
                        .WithMany()
                        .HasForeignKey("Owner_id");
                });

            modelBuilder.Entity("HWS.Dal.Entities.Homework", b =>
                {
                    b.HasOne("HWS.Dal.Entities.Group", "Group")
                        .WithMany("Homeworks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.GroupStudentJoin", b =>
                {
                    b.HasOne("HWS.Dal.Entities.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HWS.Dal.Sql.MongoUsers.DbEntities.GroupStudent", "Student")
                        .WithMany("Groups")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.GroupTeacherJoin", b =>
                {
                    b.HasOne("HWS.Dal.Entities.Group", "Group")
                        .WithMany("Teachers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HWS.Dal.Sql.MongoUsers.DbEntities.GroupTeacher", "Teacher")
                        .WithMany("Groups")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.HomeworkGranderJoin", b =>
                {
                    b.HasOne("HWS.Dal.Sql.MongoUsers.DbEntities.HomeworkGrader", "Grader")
                        .WithMany("Homeworks")
                        .HasForeignKey("GraderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HWS.Dal.Entities.Homework", "Homework")
                        .WithMany("Graders")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HWS.Dal.Sql.MongoUsers.JoinTables.HomeworkStudentJoin", b =>
                {
                    b.HasOne("HWS.Dal.Entities.Homework", "Homework")
                        .WithMany("Students")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HWS.Dal.Sql.MongoUsers.DbEntities.HomeworkStudent", "Student")
                        .WithMany("Homeworks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HWS.Dal.Sql.Comments.DbEntities.GroupComment", b =>
                {
                    b.HasOne("HWS.Dal.Entities.Group", "Group")
                        .WithMany("Comments")
                        .HasForeignKey("GroupId")
                        .IsRequired();
                });

            modelBuilder.Entity("HWS.Dal.Sql.Comments.DbEntities.HomeworkComment", b =>
                {
                    b.HasOne("HWS.Dal.Entities.Homework", "Homework")
                        .WithMany("Comments")
                        .HasForeignKey("HomeworkId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
